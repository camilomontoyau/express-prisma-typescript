openapi: '3.0.0'
info:
  version: 0.0.1
  title: express-prisma-typescript
  description: API poc for evaluating api standards
paths:
  /users:
    get:
      description: get the list of users
      operationId: getUsers
      parameters:
        - name: email
          in: query
          description: user's email
          required: false
          schema:
            type: string
        - name: firstName
          in: query
          description: user's first name
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          description: user's last name
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          description: user's phone number
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: user's status
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - DISABLED
        - name: role
          in: query
          description: user's role
          required: false
          schema:
            type: string
            enum:
              - STUDENT
              - TEACHER
              - DISABLED
      responses:
        '200':
          description: users list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: create new user
      operationId: createUser
      requestBody:
        description: create new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: user successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/{userId}:
    delete:
      description: delete a specific user for a given userId
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: user successfully removed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: update user
      operationId: updateUser
      requestBody:
        description: update an user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: user successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: get user by id
      operationId: get-user-by-id
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /courses:
    get:
      description: get a list of courses
      operationId: getCourses
      parameters:
        - name: name
          in: query
          description: course name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: courses list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: create new course
      operationId: createCourse
      requestBody:
        description: create new course
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: course successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /courses/{courseId}:
    delete:
      description: delete a specific course for a given userId
      operationId: deleteCourse
      parameters:
        - name: courseId
          in: path
          description: ID of the course
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: course successfully removed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: update course
      operationId: updateCourse
      requestBody:
        description: update/edit a course
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      description: get course by id
      operationId: get-course-by-id
      responses:
        '200':
          description: course found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /courses/{courseId}/classes:
    get:
      description: get a list of classes for a given course
      operationId: getCourseClasses
      parameters:
        - name: courseId
          in: path
          description: ID of the course
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: courses list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassesList'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: create a new class
      operationId: createClass
      parameters:
        - name: courseId
          in: path
          description: ID of the course
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: create new class
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRequest'
      responses:
        '201':
          description: class successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /courses/{courseId}/classes/{id}:
    get:
      description: get a class from a given course
      operationId: getSigleCourseClass
      parameters:
        - name: courseId
          in: path
          description: ID of the course
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the class
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: class object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: update class
      operationId: updateClass
      parameters:
        - name: courseId
          in: path
          description: ID of the course
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          description: ID of the class
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: update/edit a class
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRequest'
      responses:
        '200':
          description: Course successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      required:
        - id
        - message
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
        message:
          type: string
        errors:
          oneOf:
            - type: array
              items: 
                type: string
            - type: string

        
    ListResponse:
      required:
        - next
        - total
        - items 
      properties:
        next:
          readOnly: true
          type: number
          nullable: true
        total:
          readOnly: true
          type: number
        items: 
          readOnly: true
          type: array

    User:
      required:
        - firstName
        - email
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          nullable: false
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        created_at:
          readOnly: true
          type: string
          format: date
        updated_at:
          readOnly: true
          type: string
          format: date
    
    Course:
      required:
        - name
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          nullable: false
        name:
          type: string
        created_at:
          readOnly: true
          type: string
          format: date
        updated_at:
          readOnly: true
          type: string
          format: date

    UsersList:
      required:
        - next
        - total
        - items 
      properties:
        next:
          readOnly: true
          type: number
          nullable: true
        total:
          readOnly: true
          type: number
        items: 
          type: array
          items:
            $ref: '#/components/schemas/User'
    
    CoursesList:
      required:
        - next
        - total
        - items 
      properties:
        next:
          readOnly: true
          type: number
          nullable: true
        total:
          readOnly: true
          type: number
        items: 
          type: array
          items:
            $ref: '#/components/schemas/Course'

    ClassResponse:
      required:
        - name
        - courseId
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          nullable: false
        name:
          type: string
        courseId:
          type: string
          format: uuid
          nullable: false
        teacher:
          type: string
          format: uuid
          nullable: true
        start:
          type: string
          format: date
        end:
          type: string
          format: date
        created_at:
          readOnly: true
          type: string
          format: date
        updated_at:
          readOnly: true
          type: string
          format: date
    
    ClassRequest:
      required:
        - name
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          nullable: false
        name:
          type: string
        courseId:
          readOnly: true
          type: string
          format: uuid
          nullable: false
        teacher:
          type: string
          format: uuid
          nullable: true
          description: teacher's (user's) id, needs to previously exist
        start:
          type: string
          format: date-time
          example: "2022-09-10T00:00:00Z"
        end:
          type: string
          format: date-time
          example: "2022-10-10T00:00:00Z"
        created_at:
          readOnly: true
          type: string
          format: date
        updated_at:
          readOnly: true
          type: string
          format: date

    ClassesList:
      required:
        - next
        - total
        - items 
      properties:
        next:
          readOnly: true
          type: number
          nullable: true
        total:
          readOnly: true
          type: number
        items: 
          type: array
          items:
            $ref: '#/components/schemas/ClassResponse'

    QueryParamUuid:
      type: string
      format: uuid

    QueryParamObject:
      type: object

    QueryParamArray:
      type: array

    ResponseObject:
      type: object
    
    ResponseArray:
      type: array

    ResponseString:
      type: string